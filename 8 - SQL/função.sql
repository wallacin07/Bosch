--use AULA_SQL


--===================================================================================
--DESAFIO 1:


--alter FUNCTION fUltrapassou(@valor VARCHAR(10))
--RETURNS TABLE 
--AS
--RETURN
--(
--SELECT  top 15
--	NF.CPF, 
--	TC.NOME, 
--	TC.VOLUME_DE_COMPRA,
--	Convert(Varchar(7), NF.DATA_VENDA, 23) AS 'MES DE COMPRA', 
--	SUM(ITF.QUANTIDADE) AS 'QUANTIDADE TOTAL',
--	CASE WHEN SUM(ITF.QUANTIDADE) > TC.VOLUME_DE_COMPRA THEN 'VENDAS INVALIDAS' ELSE 'VENDAS VALIDAS' END AS 'RESULTADO'


--FROM TABELA_DE_CLIENTES TC
--INNER JOIN NOTAS_FISCAIS NF
--	ON NF.CPF = TC.CPF
--INNER JOIN ITENS_NOTAS_FISCAIS ITF
--	ON ITF.NUMERO = NF.NUMERO

--WHERE Convert(Varchar(7), NF.DATA_VENDA, 23) = @valor
--GROUP BY NF.CPF,TC.NOME,  Convert(Varchar(7), NF.DATA_VENDA, 23),TC.VOLUME_DE_COMPRA
--ORDER BY NF.CPF

--)


--SELECT * FROM fUltrapassou('2015-02')


--=====================================================================================

--DESAFIO 2:


SELECT  
	TP.SABOR,
	CONVERT(VARCHAR(5),YEAR(NF.DATA_VENDA)) AS 'ANO',
	SUM(ITF.QUANTIDADE) AS 'VENDA_ANO',
	
	ROUND(CAST(SUM(ITF.QUANTIDADE) * 100 AS FLOAT) /
	(
	SELECT  
	 SUM(ITF.QUANTIDADE)
	FROM ITENS_NOTAS_FISCAIS ITF
	INNER JOIN NOTAS_FISCAIS NF
		ON NF.NUMERO = ITF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = '2015'),2)AS 'PERCENTUAL'

FROM TABELA_DE_PRODUTOS TP
INNER JOIN ITENS_NOTAS_FISCAIS ITF
	ON ITF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = ITF.NUMERO

WHERE YEAR(NF.DATA_VENDA) = '2015'
GROUP BY TP.SABOR,CONVERT(VARCHAR(5),YEAR(NF.DATA_VENDA))
ORDER BY SUM(ITF.QUANTIDADE) DESC

